{"version":3,"sources":["source-handler.js"],"names":["md","require","fs","path","dirname","join","__dirname","files","readdirSync","dataJsonList","value","includes","dataJson","split","content","readFileSync","toString","data","pop","shift","indexOf","push","getContent","module","exports"],"mappings":";;AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAP,EAAT;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB,C,CACA;;;AACA,IAAMG,OAAO,GAAGD,IAAI,CAACE,IAAL,CAAUC,SAAV,EAAoB,cAApB,CAAhB;AACA,IAAIC,KAAK,GAAGL,EAAE,CAACM,WAAH,CAAeJ,OAAf,CAAZ;AACA,IAAIK,YAAY,GAAG,EAAnB;;;;;;AACA,uBAAiBF,KAAjB,8HAAwB;AAAA,QAAhBG,KAAgB;AAEpB,QAAG,CAACA,KAAK,CAACC,QAAN,CAAe,IAAf,CAAJ,EAA0B;AAC1BC,IAAAA,QAAQ,GAAG,EAAX;AACAA,IAAAA,QAAQ,CAAC,MAAD,CAAR,GAAmBR,OAAO,GAAE,GAAT,GAAeM,KAAlC;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR,GAAkB,EAAlB;AACAA,IAAAA,QAAQ,CAAC,MAAD,CAAR,GAAmBF,KAAK,CAACG,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAnB;AACAD,IAAAA,QAAQ,CAAC,OAAD,CAAR,GAAoBF,KAAK,CAACG,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAApB;AACAD,IAAAA,QAAQ,CAAC,KAAD,CAAR,GAAkBF,KAAK,CAACG,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAlB;AACA,QAAIC,OAAO,GAAGZ,EAAE,CAACa,YAAH,CAAgBX,OAAO,GAAC,GAAR,GAAcM,KAA9B,EAAsCM,QAAtC,EAAd;AACA,QAAGF,OAAH,EAAY;AACZ,QAAIG,IAAI,GAAGH,OAAO,CAACD,KAAR,CAAc,KAAd,EAAqB,CAArB,EAAwBA,KAAxB,CAA8B,IAA9B,CAAX;AACAI,IAAAA,IAAI,CAACC,GAAL;AACAD,IAAAA,IAAI,CAACE,KAAL;AAboB;AAAA;AAAA;;AAAA;AAcpB,4BAAiBF,IAAjB,mIAAsB;AAAA,YAAdP,MAAc;AAClB,YAAGA,MAAK,CAACG,KAAN,CAAY,GAAZ,EAAiB,CAAjB,KAAuB,OAA1B,EACID,QAAQ,CAAC,OAAD,CAAR,GAAoBF,MAAK,CAACG,KAAN,CAAY,GAAZ,EAAiB,CAAjB,EAAoBA,KAApB,CAA0B,IAA1B,EAAgC,CAAhC,CAApB;;AACJ,YAAGH,MAAK,CAACG,KAAN,CAAY,GAAZ,EAAiB,CAAjB,EAAoBO,OAApB,CAA4B,GAA5B,KAAoC,CAAvC,EAAyC;AACrCR,UAAAA,QAAQ,CAAC,KAAD,CAAR,CAAgBS,IAAhB,CAAqBX,MAAK,CAACG,KAAN,CAAY,GAAZ,EAAiB,CAAjB,EAAoBA,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAArB;AACH;AACJ;AApBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBpBJ,IAAAA,YAAY,CAACY,IAAb,CAAkBT,QAAlB;AACH;;;;;;;;;;;;;;;;AACD,SAASU,UAAT,CAAqBnB,IAArB,EAA0B;AACtB,MAAIW,OAAO,GAAGZ,EAAE,CAACa,YAAH,CAAgBZ,IAAhB,EAAsBa,QAAtB,EAAd;AACA,SAAOF,OAAO,CAACD,KAAR,CAAc,KAAd,EAAqB,CAArB,CAAP;AACH;;AAEDU,MAAM,CAACC,OAAP,GAAiB;AACbf,EAAAA,YAAY,EAAZA,YADa;AAEba,EAAAA,UAAU,EAAVA;AAFa,CAAjB","sourcesContent":["var md = require('markdown-it')();\nconst fs = require('fs')\nconst path = require('path');\n// const { isArray } = require('core-js/fn/array');\nconst dirname = path.join(__dirname,'../../_posts')\nlet files = fs.readdirSync(dirname);\nlet dataJsonList = []\nfor(let value of files) {\n    \n    if(!value.includes('md')) continue\n    dataJson = {}\n    dataJson['path']=  dirname +'/' + value\n    dataJson['tag'] = []\n    dataJson['year'] = value.split(\"-\")[0]\n    dataJson['month'] = value.split(\"-\")[1]\n    dataJson['day'] = value.split(\"-\")[2]\n    let content = fs.readFileSync(dirname+'/' + value ).toString()\n    if(content) continue\n    let data = content.split(\"---\")[1].split(\"\\n\")\n    data.pop()\n    data.shift()\n    for(let value of data){\n        if(value.split(\":\")[0] == 'title')\n            dataJson['title'] = value.split(\":\")[1].split('\\\"')[1]\n        if(value.split(\":\")[0].indexOf('-') == 0){\n            dataJson['tag'].push(value.split(\":\")[0].split('-')[1])\n        }\n    }\n    dataJsonList.push(dataJson)\n}\nfunction getContent (path){\n    let content = fs.readFileSync(path).toString()\n    return content.split(\"---\")[2]\n}\n\nmodule.exports = {\n    dataJsonList,\n    getContent\n}\n\n"],"file":"source-handler.dev.js"}